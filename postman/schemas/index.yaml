openapi: "3.0.0"
info:
    version: "0.0.1"
    title: "Game Repository API"
    description: Rest API for Game Repository

servers:
    - url: https://sad.capass.org
      description: Stage server (public available)
    - url: http://localhost:3000
      description: Local server (used for development)

paths:
    /games/{id}:
        parameters:
            - name: id
              description: Game identifier
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/Id"
        get:
            summary: Reads a Game
            tags:
                - games
            responses:
                "200":
                    description: The game corresponding to the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Game"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: No game found for the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        delete:
            summary: Deletes a Game
            tags:
                - games
            responses:
                "204":
                    description: Game deleted
                "404":
                    description: No game found for the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        put:
            summary: Updates a Game
            tags:
                - games
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                currentRound:
                                    type: integer
            responses:
                "200":
                    description: The game is successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Game"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: No game found for the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /games:
        post:
            summary: Creates a Game
            tags:
                - games
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                playersCount:
                                    type: integer
            responses:
                "201":
                    description: Created
                default:
                    description: Unexpected Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /rounds/{id}:
        parameters:
            - name: id
              description: Round identifier
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/Id"

        get:
            summary: Reads a Round
            tags:
                - rounds
            responses:
                "200":
                    description: The Round corresponding to the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Round"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: No Round found for the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        delete:
            summary: Deletes a Round
            tags:
                - rounds
            responses:
                "204":
                    description: Round deleted
                "404":
                    description: No Round found for the provided `Id`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /rounds:
        post:
            summary: Creates a Round
            tags:
                - rounds
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                idGame:
                                    type: integer
                                idTestClass:
                                    type: integer
            responses:
                "201":
                    description: Created
                default:
                    description: Unexpected Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

components:
    schemas:
        Id:
            description: The unique identifier
            type: integer

        Game:
            type: object
            required:
                - id
                - currentRound
                - createdAt
                - updatedAt
                - playersCount
                - name
            properties:
                id:
                    $ref: "#/components/schemas/Id"
                currentRound:
                    type: integer
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                playersCount:
                    type: integer
                name:
                    type: string

        Round:
            type: object
            required:
                - id
                - idTestClass
                - createdAt
                - updatedAt

            properties:
                id:
                    $ref: "#/components/schemas/Id"
                idTestClass:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Error:
            type: "object"
            required:
                - message
            properties:
                message:
                    type: string
