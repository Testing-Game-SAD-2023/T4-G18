# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'README.md'
      - 'vendor/**'
      - 'postman/**'
      - '.postman/**'
      - Makefile
      - LICENSE
      
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'README.md'
      - 'vendor/**'
      - 'postman/**'
      - '.postman/**'
      - Makefile
      - LICENSE
      
  workflow_dispatch:


jobs:

  build-and-test:
    services:
      postgres:
        image: postgres:14-alpine3.17
        env:
          POSTGRES_PASSWORD: postgres
        options: 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: make build

    - name: Unit tests
      run: make test

    - name: Run all tests
      run: |
        make test-integration CI=1 DB_URI=postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable

    - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
      uses: tj-actions/coverage-badge-go@v2
      with:
        filename: coverage.out

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v12
      id: verify-changed-files
      with:
          files: README.md

    - name: Commit changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "chore: Updated coverage badge."

    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.head_ref }}

   

    
        
