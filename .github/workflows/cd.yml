name: Continous deployment

on:
  push:
    branches: [ "stage" ]
    paths-ignore:
      - 'README.md'
      - 'vendor/**'
      - 'postman/**'
      - '.postman/**'
      - Makefile
      - LICENSE
      - 'docs/**'
      
  pull_request:
    branches: [ "stage" ]
    paths-ignore:
      - 'README.md'
      - 'vendor/**'
      - 'postman/**'
      - '.postman/**'
      - Makefile
      - LICENSE
      - 'docs/**'
  workflow_dispatch:

jobs:
  test:
    services:
      postgres:
        image: postgres:14-alpine3.17
        env:
          POSTGRES_PASSWORD: postgres
        options: 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout
      with:
        persist-credentials: false
        fetch-depth: 0
 
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.4

    - name: Run all tests
      run: make test-integration CI=1 DB_URI=postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable COVER_DIR=$(pwd)/coverage



  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/game-repository:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pulling new image
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/giuseppe/services/sad
            docker compose down
            docker compose pull
            docker compose up -d