name: Release

on:
  release:
    types: [created]
  workflow_dispatch: 

jobs:
  test:
    services:
      postgres:
        image: postgres:14-alpine3.17
        env:
          POSTGRES_PASSWORD: postgres
        options: 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    permissions:
      actions: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout
 
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.4
    
    - name: Unit tests
      run:  make test

    - name: Run all tests
      run: make test-integration CI=1 DB_URI=postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable COVER_DIR=$(pwd)/coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
      name: Checkout
 
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/game-repository:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy on stage server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/giuseppe/services/sad
            docker compose down
            docker compose pull
            docker compose up -d
    
  releases-matrix:
        needs: test
        name: Release Go Binary
        runs-on: ubuntu-latest
        permissions: write-all
        strategy:
          matrix:
            goos: [linux, windows, darwin]
            goarch: ["386", amd64, arm64]
            exclude:
            - goarch: "386"
              goos: darwin
            - goarch: arm64
              goos: windows
        steps:
        - uses: actions/checkout@v3
        - uses: wangyoucao577/go-release-action@v1.38
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            goos: ${{ matrix.goos }}
            goarch: ${{ matrix.goarch }}
            goversion: 1.20.4
            ldflags: -s -w
            md5sum: false
            sha256sum: true
            extra_files: LICENSE README.md postman/schemas/index.yaml postman/collections/GameRepositoryCollection.json
